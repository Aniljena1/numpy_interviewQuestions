numpy introduction
------------------
2. ctrl+enter -->enter
3.b-->add new shell
4.shift+enter-->run or add new shell
5.esc+d -->delete mode
6.esc+1 -->heading 
7. markdown ->#welcome to python --> heading
Q: What is Numpy?
Ans: Numpy short for Numerical Python. It is an open source python Library  for doing scientific computing with python.
     It gives ability to creat multidymention array and matrix for doing mathmetical operations.

Q: Why use Numpy?
.numpy provides efficient storage
.It also provides better ways of handling data for processing
.It is fast

*********
dtype ->The 'dtype' determines the datatype of element store in a numpy array.
ndim -> for check array dymention
size -> for check array size
shape -> like (2,4) -> 2-> row , 4->column
import numpy as np
ar1=np.array([1,2,3,4,5,6,7,8,9],dtype='int16')
print(ar1)
print(ar1.nbytes)
ar1.ndim
ar1.shape
ar1.size
ar1.dtype
****************
ones() - ones function generates an array with the specified dimension and data type filled with ones.
import numpy as np
ar2=np.ones(5)
ar2
array([1., 1., 1., 1., 1.])
ar2=np.ones((2,5)) #2d
ar2
array([[1., 1., 1., 1., 1.],
       [1., 1., 1., 1., 1.]])
********************
zeros() - generates an array with the specfied dimention and data type that is filled with zeros.
os=np.zeros((2,5))
os
array([[0., 0., 0., 0., 0.],
       [0., 0., 0., 0., 0.]])

**********************************
full() - generates an array with the specfied dimension and datatype that is filled with ones.
import numpy as np
ar2=np.full(5,10)
ar2
array([10, 10, 10, 10, 10])
ar2=np.full((2,3),5)
ar2
array([[5, 5, 5],
       [5, 5, 5]])

************************
arange() - arange function creats an array with every spaced values between the specified start,end & step values.
import numpy as np
ar2=np.arange(1,10)
ar2
array([1, 2, 3, 4, 5, 6, 7, 8, 9])
ar2=np.arange(1,10,2)
ar2
array([1, 3, 5, 7, 9])
*************************
linspace() -> it generates an array with same differnce between start,end values,using a specfied number of elements.
ar2=np.linspace(1,8,3)
ar2
array([1. , 4.5, 8. ])
**************************
reshape() ->it converts array dimntion like it use converts 1d array to 2d array.
ar2=np.arange(1,13).reshape(2,6)
ar2
array([[ 1,  2,  3,  4,  5,  6],
       [ 7,  8,  9, 10, 11, 12]])
***************************
reval() -it conver 2d array to 1d array
ar2=np.arange(1,13).reshape(2,6)
ar2.ravel()
array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12])
***************************
transpose() -> It converts row to column
ar2=np.arange(1,13).reshape(2,6)
ar2.transpose()
array([[ 1,  7],
       [ 2,  8],
       [ 3,  9],
       [ 4, 10],
       [ 5, 11],
       [ 6, 12]])

*****************************
concatenate()
import numpy as np
ar1=np.arange(1,13).reshape(3,4)
ar2=np.arange(1,13).reshape(3,4)
print(ar1)
print(ar2)

[[ 1  2  3  4]
 [ 5  6  7  8]
 [ 9 10 11 12]]
[[ 1  2  3  4]
 [ 5  6  7  8]
 [ 9 10 11 12]]

np.concatenate((ar1,ar2))
array([[ 1,  2,  3,  4],
       [ 5,  6,  7,  8],
       [ 9, 10, 11, 12],
       [ 1,  2,  3,  4],
       [ 5,  6,  7,  8],
       [ 9, 10, 11, 12]])

np.vstack((ar1,ar2)) #vertical row wise concatinate
array([[ 1,  2,  3,  4],
       [ 5,  6,  7,  8],
       [ 9, 10, 11, 12],
       [ 1,  2,  3,  4],
       [ 5,  6,  7,  8],
       [ 9, 10, 11, 12]])

np.hstack((ar1,ar2)) #horizontal row wise concatinate
array([[ 1,  2,  3,  4,  1,  2,  3,  4],
       [ 5,  6,  7,  8,  5,  6,  7,  8],
       [ 9, 10, 11, 12,  9, 10, 11, 12]])
*******************************************
li1=np.split(ar1,2) #for split array

random
=======
import numpy as np
import random

np.random.random(3) # it creat value between o to 1 & it 1d
array([0.65286677, 0.98949103, 0.58424323])

np.random.random((2,3))# creat 2d array
array([[0.11939018, 0.45832202, 0.60071945],
       [0.35999218, 0.3907818 , 0.11512042]])

np.random.randint(1,4) #single integer value
2

np.random.randint(1,11,10) #for random value & its 1d
array([ 1,  8, 10,  6,  5,  9,  5,  4,  9,  8])

p.random.randint(1,4,(4,4)) # its 2d (4,4)-> matrix
array([[2, 3, 1, 2],
       [1, 3, 1, 2],
       [3, 3, 2, 2],
       [1, 2, 2, 1]])

np.random.randint(1,4,(2,4,4)) #3d array

np.random.rand(3) #for creat nd array ,value bet 0,1
array([0.75465467, 0.93144421, 0.86707508])

np.random.randn(3,3)
array([[-1.09544542,  0.42105443, -0.27972209],
       [ 1.761564  , -1.74092436, -1.30221154],
       [-0.37887818,  0.32596759,  0.40554258]])

x=[1,2,3,4]
np.random.choice(x)
1

for i in range(11):
    print(np.random.choice(x))

1
1
2
1
4
4
2
1
2

np.random.permutation(x)
array([4, 1, 3, 2])

interview question
===================
Q:import numpy library
Ans: import numpy as np

Q:Creat an Array using array function
Ans:arr=np.array([1,2,3])
    arr
   -> array([1, 2, 3])

Q:Creat an Array containing numbers from 20 to 40.
Ans:arr2=np.arange(20,41)
    arr2
    ->array([20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
       37, 38, 39, 40])

Q:Creat an Array which contain 10 element and every element is 5.
Ans:fives=np.ones(10)*5
    fives
    ->array([5., 5., 5., 5., 5., 5., 5., 5., 5., 5.])

Q:Creat a 1-d array and then convert it into 3-d array 
Ans:arr3=np.random.randint(1,50,24)
    arr3
    ->array([47, 30, 27, 19, 21, 26, 12,  3, 28, 13, 22, 39, 25, 48, 21, 23, 33,
       15, 43, 25, 46, 44, 45, 16]) #id array
    arr3=np.random.randint(1,50,24).reshape(3,4,2)
    arr3
    array([[[28, 44],
        [13, 35],
        [24, 32],
        [49, 38]],

       [[40, 25],
        [ 8, 16],
        [33, 27],
        [45, 32]],

       [[43, 24],
        [37, 30],
        [ 5, 27],
        [28, 14]]])

Q:Create 2-d array which contains random 25 numbers between 0 and 1.
Ans:arr4=np.random.rand(4,5)
    arr4
    array([[0.92150689, 0.3330391 , 0.2093941 , 0.79214863, 0.2026836 ],
           [0.72595849, 0.8784263 , 0.10910984, 0.07464384, 0.00852665],
           [0.5604978 , 0.94431709, 0.22650908, 0.40855277, 0.07143202],
           [0.84330218, 0.33267112, 0.59204215, 0.58635648, 0.41796226]])

Q:create array containing 20 random integer then replace every even number with -1.
  Ex:array-->[44,,55,12,6,3]
     output->[-1,55,-1,-1,3]
  Ans:np.random.seed(123)
      arr5=np.random.randint(1,50,20)
      arr5[arr5 %2 == 0] = -1
      arr5
     ->array([-1,  3, 29, 35, 39, -1, -1, 43, 23, -1, 33, -1, -1, 33, 47, 33, -1,
       -1, -1, 15])

Q:you have a matrix
 [[5,10,15,20,25],[30,35,42,45,50],[55,60,65,70,75],
  [80,85,90,95,100]]
Extract: [30,35,40] [55,60,65]

Ans:matrix=np.array([[5,10,15,20,25],[30,35,40,45,50],[55,60,65,70,75],[80,85,90,95,100]])
    matrix[1:3,0:3]
--->array([[30, 35, 40],
       [55, 60, 65]])

Q:Concatenate two 1-d array
Ans:arr7=np.array([1,2,3])
    arr8=np.array([4,5,6])
    np.hstack((arr7,arr8))
  ->array([1, 2, 3, 4, 5, 6])

Q: Stack 2-d matrix horizontally and vertically

Ans:matrix2=np.random.randint(1,10,9).reshape(3,3)
    matrix3=np.random.randint(10,20,9).reshape(3,3)
    matrix2
    array([[7, 2, 6],
       [7, 3, 2],
       [9, 4, 6]])
   
    matrix3
    array([[10, 12, 16],
       [12, 14, 14],
       [16, 13, 10]])

   np.hstack((matrix2,matrix3))  #horizontal
   array([[ 7,  2,  6, 10, 12, 16],
       [ 7,  3,  2, 12, 14, 14],
       [ 9,  4,  6, 16, 13, 10]])
   np.vstack((matrix2,matrix3))  #vertical
   array([[ 7,  2,  6],
       [ 7,  3,  2],
       [ 9,  4,  6],
       [10, 12, 16],
       [12, 14, 14],
       [16, 13, 10]])



